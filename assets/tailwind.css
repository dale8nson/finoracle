/*! tailwindcss v4.0.8 | MIT License | https://tailwindcss.com */
.visible {
  visibility: visible;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.sticky {
  position: sticky;
}
.top-\[0\.5rem\] {
  top: 0.5rem;
}
.top-\[0px\] {
  top: 0px;
}
.top-\[1rem\] {
  top: 1rem;
}
.top-\[2rem\] {
  top: 2rem;
}
.top-\[4rem\] {
  top: 4rem;
}
.top-\[5rem\] {
  top: 5rem;
}
.left-\[0px\] {
  left: 0px;
}
.left-\[0rem\] {
  left: 0rem;
}
.z-0 {
  z-index: 0;
}
.z-50 {
  z-index: 50;
}
.z-\[1\] {
  z-index: 1;
}
.z-\[10\] {
  z-index: 10;
}
.col-span-3 {
  grid-column: span 3 / span 3;
}
.container {
  width: 100%;
}
.m-\[0px\] {
  margin: 0px;
}
.m-auto {
  margin: auto;
}
.mx-\[5px\] {
  margin-inline: 5px;
}
.my-\[0px\] {
  margin-block: 0px;
}
.my-\[0rem\] {
  margin-block: 0rem;
}
.mt-\[0\.6rem\] {
  margin-top: 0.6rem;
}
.ml-\[0px\] {
  margin-left: 0px;
}
.block {
  display: block;
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.table {
  display: table;
}
.h-\[1\.5rem\] {
  height: 1.5rem;
}
.h-\[10\%\] {
  height: 10%;
}
.h-\[48\.75vh\] {
  height: 48.75vh;
}
.h-\[50\%\] {
  height: 50%;
}
.h-\[80\%\] {
  height: 80%;
}
.h-\[85\%\] {
  height: 85%;
}
.h-\[90\%\] {
  height: 90%;
}
.h-\[95\%\] {
  height: 95%;
}
.h-\[95vh\] {
  height: 95vh;
}
.h-\[100\%\] {
  height: 100%;
}
.h-auto {
  height: auto;
}
.max-h-\[50\%\] {
  max-height: 50%;
}
.max-h-\[90\%\] {
  max-height: 90%;
}
.max-h-\[100\%\] {
  max-height: 100%;
}
.min-h-\[50\%\] {
  min-height: 50%;
}
.w-\[45\%\] {
  width: 45%;
}
.w-\[60\%\] {
  width: 60%;
}
.w-\[95vw\] {
  width: 95vw;
}
.w-\[98vw\] {
  width: 98vw;
}
.w-\[100\%\] {
  width: 100%;
}
.w-\[100vw\] {
  width: 100vw;
}
.w-full {
  width: 100%;
}
.flex-grow {
  flex-grow: 1;
}
.grow {
  flex-grow: 1;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.cursor-pointer {
  cursor: pointer;
}
.resize {
  resize: both;
}
.list-outside {
  list-style-position: outside;
}
.list-none {
  list-style-type: none;
}
.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}
.grid-cols-\[8fr_1fr\] {
  grid-template-columns: 8fr 1fr;
}
.flex-col {
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-start {
  justify-content: flex-start;
}
.gap-x-\[0\.5rem\] {
  column-gap: 0.5rem;
}
.gap-x-\[0\.25rem\] {
  column-gap: 0.25rem;
}
.gap-x-\[1rem\] {
  column-gap: 1rem;
}
.gap-x-\[3rem\] {
  column-gap: 3rem;
}
.gap-y-\[0\.5rem\] {
  row-gap: 0.5rem;
}
.gap-y-\[0\.25rem\] {
  row-gap: 0.25rem;
}
.gap-y-\[0px\] {
  row-gap: 0px;
}
.gap-y-\[2\.5\%\] {
  row-gap: 2.5%;
}
.gap-y-\[2rem\] {
  row-gap: 2rem;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-scroll {
  overflow-y: scroll;
}
.rounded-\[0\.75rem\] {
  border-radius: 0.75rem;
}
.rounded-t-\[0\.85rem\] {
  border-top-left-radius: 0.85rem;
  border-top-right-radius: 0.85rem;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-none {
  --tw-border-style: none;
  border-style: none;
}
.border-solid {
  --tw-border-style: solid;
  border-style: solid;
}
.border-\[\#ffffff\] {
  border-color: #ffffff;
}
.bg-\[\#000\] {
  background-color: #000;
}
.bg-\[\#000000\] {
  background-color: #000000;
}
.bg-\[\#0009\] {
  background-color: #0009;
}
.p-\[0\.75rem\] {
  padding: 0.75rem;
}
.p-\[0\.125rem\] {
  padding: 0.125rem;
}
.p-\[1rem\] {
  padding: 1rem;
}
.px-\[0\.5rem\] {
  padding-inline: 0.5rem;
}
.px-\[1rem\] {
  padding-inline: 1rem;
}
.py-\[0\.25rem\] {
  padding-block: 0.25rem;
}
.pt-\[0px\] {
  padding-top: 0px;
}
.pl-\[0\.5rem\] {
  padding-left: 0.5rem;
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.font-\[sans-serif\] {
  font-family: sans-serif;
}
.text-\[1\.5rem\] {
  font-size: 1.5rem;
}
.text-\[1\.25rem\] {
  font-size: 1.25rem;
}
.text-\[1\.125rem\] {
  font-size: 1.125rem;
}
.text-\[1rem\] {
  font-size: 1rem;
}
.text-\[2rem\] {
  font-size: 2rem;
}
.text-\[\#ffffff\] {
  color: #ffffff;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-\[0\.5s\] {
  --tw-duration: 0.5s;
  transition-duration: 0.5s;
}
.duration-\[0\.25s\] {
  --tw-duration: 0.25s;
  transition-duration: 0.25s;
}
.hover\:translate-x-\[-0\.2rem\] {
  &:hover {
    @media (hover: hover) {
      --tw-translate-x: -0.2rem;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
.hover\:cursor-pointer {
  &:hover {
    @media (hover: hover) {
      cursor: pointer;
    }
  }
}
.hover\:text-\[\#0000ee\] {
  &:hover {
    @media (hover: hover) {
      color: #0000ee;
    }
  }
}
.hover\:text-\[\#eeeeee\] {
  &:hover {
    @media (hover: hover) {
      color: #eeeeee;
    }
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
